// Mocks generated by Mockito 5.4.5 from annotations
// in sq1_assignment/test/feature/city_search/cubit/city_search_cubit/city_search_cubit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;
import 'package:multiple_result/multiple_result.dart' as _i4;
import 'package:sq1_assignment/feature/city_search/city_search.dart' as _i2;
import 'package:sq1_assignment/network_service/network_service.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [CitySearchRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCitySearchRepository extends _i1.Mock
    implements _i2.CitySearchRepository {
  MockCitySearchRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.Result<_i5.PaginatedData<_i2.City>, String>> getCitiesByName({
    required String? name,
    int? page,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getCitiesByName, [], {#name: name, #page: page}),
            returnValue: _i3.Future<
              _i4.Result<_i5.PaginatedData<_i2.City>, String>
            >.value(
              _i6.dummyValue<_i4.Result<_i5.PaginatedData<_i2.City>, String>>(
                this,
                Invocation.method(#getCitiesByName, [], {
                  #name: name,
                  #page: page,
                }),
              ),
            ),
          )
          as _i3.Future<_i4.Result<_i5.PaginatedData<_i2.City>, String>>);

  @override
  _i3.Future<_i4.Result<_i2.Location, String>> getCityLocation(
    _i2.City? city,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getCityLocation, [city]),
            returnValue: _i3.Future<_i4.Result<_i2.Location, String>>.value(
              _i6.dummyValue<_i4.Result<_i2.Location, String>>(
                this,
                Invocation.method(#getCityLocation, [city]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<_i2.Location, String>>);
}
